# Importem llibreries per als nombres aleatoris i per al joc.
import random
import pygame

# Una funció per al menú principal.
def menu():
    print("""
            0. Sortir
            1. Aleatori.
            2. Lletres.
            3. Juego 2D.
            4. Clases.
    """)
    a = int(input("Introdueix un número de selecció: "))
    return a

# Programa dels nombres aleatoris.
def aleatori():
    l = []
    # Dona 50 nombres del 1 al 100.
    for i in range(1, 50):
        x = random.randint(1, 100)
        l.append(x)
    print(l)

# Programa de fer llistes amb les lletres que introdueix l'usuari i una opció per a les vegades que vulguis.
def lletres():
    l = []
    count = int(input("¿Quantes vegades vols introduir una lletra/paraula?: "))
    for i in range(count):
        x = input("Introdueix una lletra/paraula: ")
        l.append(x)
    print(l)

# Funció completa del joc en 2D.
def juego_2D():
    # Funció per a iniciar el joc.
    pygame.init()
    # Mida de la pantalla del joc.
    width = 800
    height = 600
    # Color de l'escenari del joc.
    negro = (0, 0, 0)
    blanco = (255, 255, 255)
    # Funció per a la pantalla on l'usuari juga.
    pantalla = pygame.display.set_mode((width, height))
    pygame.display.set_caption("Juego 2D")

    clock = pygame.time.Clock()

    # Definició de una classe per al jugador que utilitzarem.
    class Player(pygame.sprite.Sprite):
        def __init__(self):
            super().__init__()
            self.image = pygame.Surface([50, 50])
            self.image.fill(blanco)
            self.rect = self.image.get_rect()
            self.rect.x = width // 2
            self.rect.y = height - 70

        # Funció per als controls del jugador.
        def update(self):
            keys = pygame.key.get_pressed()
            if keys[pygame.K_LEFT]:
                self.rect.x -= 5
            if keys[pygame.K_RIGHT]:
                self.rect.x += 5

            if self.rect.x < 0:
                self.rect.x = 0
            if self.rect.x > width - 50:
                self.rect.x = width - 50

    # Una classe per a crear les figures enemigues del joc.
    class Obstacle(pygame.sprite.Sprite):
        def __init__(self):
            super().__init__()
            self.image = pygame.Surface([random.randint(10, 30), 20])
            self.image.fill((random.randint(50, 255), random.randint(30, 155), random.randint(50, 255)))
            self.rect = self.image.get_rect()
            self.rect.x = random.randint(0, width - self.rect.width)
            self.rect.y = -self.rect.height

        # Funció per a què els blocs enemics surtin de forma diferent cada vegada que es juga.
        def update(self):
            self.rect.y += 3
            if self.rect.y > height:
                self.rect.x = random.randint(0, width - self.rect.width)
                self.rect.y = -self.rect.height

    all_sprites = pygame.sprite.Group()
    obstacles = pygame.sprite.Group()

    player = Player()
    all_sprites.add(player)

    # Un bucle per a que comenci el joc fins que el jugador mori.
    running = True
    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False

        # Funció per a generar obstacles aleatoris del 0 al 100.
        if random.randint(0, 100) < 2:
            obstacle = Obstacle()
            all_sprites.add(obstacle)
            obstacles.add(obstacle)

        all_sprites.update()

        if pygame.sprite.spritecollide(player, obstacles, False):
            running = False

        pantalla.fill(negro)
        all_sprites.draw(pantalla)
        pygame.display.flip()

        clock.tick(60)

    # Es tanca el joc amb aquesta funció.
    pygame.quit()
#Funció de les clases
def clases():
    print("Clases dels moviments")
    class Persona():
        def __init__(self, cames, servei):
            self.cames = cames
            self.servei = servei

        def xerrar(self):
            pass

        def mourem(self):
            pass

        def quisoc(self):
            print("Sóc una persona.")

    class Cotxe(Persona):
        def xerrar(self):
            print("El so que em caracteritza és: Vroom vroom!")

        def mourem(self):
            print("Em moc conduint!")

    class Camio(Persona):
        def xerrar(self):
            print("El so que em caracteritza és: Beeeep beep!")

        def mourem(self):
            print("Em moc transportant mercaderies.")

    class Moto(Persona):
        def xerrar(self):
            print("El so que em caracteritza és: Rrrrrrrr!")

        def mourem(self):
            print("Em moc conduint a tota velocitat!")

    class PersonaNormal(Persona):
        def __init__(self, nom):
            super().__init__(2, "Vida normal")
            self.nom = nom

        def xerrar(self):
            print("El so que em caracteritza és: ¡Hola!")

        def mourem(self):
            print("Em moc caminant com una persona normal.")

        def quisoc(self):
            print("Sóc una persona normal i em dic {}".format(self.nom))

    class Conductors(Persona):
        def __init__(self, nom, llicencia):
            super().__init__(2, "Conductor")
            self.nom = nom
            self.llicencia = llicencia

        def xerrar(self):
            print("El so que em caracteritza és: Honk honk!")

        def mourem(self):
            print("Em moc conduint un vehicle.")

        def quisoc(self):
            print("Sóc un conductor amb llicència {} i em dic {}".format(self.llicencia, self.nom))

    coches = [
        PersonaNormal("Carla"),
        Cotxe(4, "Personal"),
        Camio(6, "Transport"),
        Moto(2, "Divertiment"),
        Conductors("Marc", "B")
    ]

    for coche in coches:
        coche.quisoc()
        coche.mourem()
        coche.xerrar()

    if isinstance(coche, Conductors):
        print("Llicència de conduir: {}".format(coche.llicencia))

 
# Estructura d'un bucle de funció per al programa principal.
a = True
while a:
    a = menu()
    if a == 1:
        aleatori()
    elif a == 2:
        lletres()
    elif a == 3:
        juego_2D()
    elif a == 4:
        clases()
    elif a == 0:
        a = False
        print("Adéu, ara sortirem de l'app")
    else:
        print("Error, opció no vàlida")
